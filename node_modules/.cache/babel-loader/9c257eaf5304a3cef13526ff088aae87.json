{"ast":null,"code":"var _jsxFileName = \"/home/rascal/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/git/text-front2/src/components/AddList/AddList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../../style/todoList/todoList.sass';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddList(_ref) {\n  _s();\n\n  let {\n    getInput,\n    setinput\n  } = _ref;\n  const [currentStatus, setCurrentStatus] = useState(getInput);\n  console.log('currentStatus', currentStatus);\n\n  function deliteTask(id) {\n    let newTodo = [...getInput].filter(item => item.id !== id);\n    setinput(newTodo);\n  }\n\n  function statusTask(id) {\n    let newTodo = [...getInput].filter(item => {\n      if (item.id === id) {\n        item.status = !item.status;\n      }\n\n      return item;\n    });\n    setinput(newTodo);\n  }\n\n  function TodoFilters(status) {\n    console.log(status);\n\n    if (status === 'all') {\n      setCurrentStatus(getInput);\n      console.log(getInput);\n    } else {\n      console.log(getInput);\n      let newTodo = [...getInput].filter(item => item.status === status);\n      setCurrentStatus(newTodo);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [currentStatus.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !item.status ? 'task__item task__close' : 'task__item task__open',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"task__name\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__btns btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn__status\",\n          onClick: () => statusTask(item.id),\n          type: \"\",\n          children: item.status == false ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"btn__statusDone\",\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 60\n          }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 125\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn__delite\",\n          onClick: () => deliteTask(item.id),\n          type: \"\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 102\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters('all'),\n        children: \"All task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters(false),\n        children: \"\\u0421ompleted tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters(true),\n        children: \"Unfinished tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddList, \"8WUGKdiaAS8Ub1UCBneWInfECRo=\");\n\n_c = AddList;\nexport default AddList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/text-front2/src/components/AddList/AddList.js"],"names":["React","useState","FontAwesomeIcon","faTrash","faCheck","AddList","getInput","setinput","currentStatus","setCurrentStatus","console","log","deliteTask","id","newTodo","filter","item","statusTask","status","TodoFilters","map","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport '../../style/todoList/todoList.sass'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction AddList ({ getInput, setinput }) {\n\n    const [currentStatus, setCurrentStatus] = useState(getInput);\n    console.log('currentStatus', currentStatus);\n\n\n    function deliteTask (id) {\n        let newTodo = [...getInput].filter(item => item.id !== id)\n        setinput(newTodo)\n    }\n\n    function statusTask (id) {\n        let newTodo = [...getInput].filter(item => {\n            if (item.id === id) {\n                item.status = !item.status\n            }\n            return item\n        })\n        setinput(newTodo)\n    }\n    function TodoFilters (status) {\n        console.log(status);\n        if (status === 'all') {\n            setCurrentStatus(getInput)\n            console.log(getInput);\n        } else {\n            console.log(getInput);\n            let newTodo = [...getInput].filter(item => (item.status === status))\n            setCurrentStatus(newTodo)\n        }\n    }\n\n    return (\n        <div className=\"task\">\n            {\n                currentStatus.map((item) => (\n\n                    <div className={!item.status ? 'task__item task__close' : 'task__item task__open'} key={item.id}>\n                        <div>\n                            <p className=\"task__name\"  >{item.title}</p>\n                        </div>\n                        <div className=\"task__btns btn\">\n                            <div className=\"btn__status\" onClick={() => statusTask(item.id)} type=\"\">\n                                {\n                                    item.status == false ? <FontAwesomeIcon className=\"btn__statusDone\" icon={faCheck} /> : <FontAwesomeIcon icon={faCheck} />}\n                            </div>\n                            <div className=\"btn__delite\" onClick={() => deliteTask(item.id)} type=\"\"><FontAwesomeIcon icon={faTrash} /></div>\n                        </div>\n                    </div>\n\n                ))\n            }\n            <div className=\"filters\">\n                <div className=\"filters__btn\" onClick={() => TodoFilters('all')}>All task</div>\n                <div className=\"filters__btn\" onClick={() => TodoFilters(false)}>Сompleted tasks</div>\n                <div className=\"filters__btn\" onClick={() => TodoFilters(true)}>Unfinished tasks</div>\n            </div >\n        </ div >\n    )\n}\n\n\nexport default AddList"]},"metadata":{},"sourceType":"module"}