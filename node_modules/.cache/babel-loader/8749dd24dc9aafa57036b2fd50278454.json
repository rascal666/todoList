{"ast":null,"code":"var _jsxFileName = \"/home/rascal/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/git/todoList/src/components/AddList/AddList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport '../../style/todoList.sass';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddList(_ref) {\n  _s();\n\n  let {\n    getTodo,\n    setTodo\n  } = _ref;\n  const [currentStatus, setCurrentStatus] = useState(getTodo);\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(getTodo));\n  }, [getTodo]);\n  useEffect(() => {\n    setCurrentStatus(getTodo);\n  }, [getTodo]);\n\n  function deliteTask(id) {\n    let newTodo = [...getTodo].filter(item => item.id !== id);\n    setTodo(newTodo);\n  }\n\n  function statusTask(id) {\n    let newTodo = [...getTodo].filter(item => {\n      if (item.id === id) {\n        item.status = !item.status;\n      }\n\n      return item;\n    });\n    setTodo(newTodo);\n  }\n\n  function TodoFilters(status) {\n    if (status === 'all') {\n      setCurrentStatus(getTodo);\n    } else {\n      let newTodo = [...getTodo].filter(item => item.status === status);\n      setCurrentStatus(newTodo);\n    }\n  }\n\n  function findOption(e) {\n    console.log(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskWrapper content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskWrapper__todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: () => findOption(),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: true,\n          children: \"\\u0421ompleted tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: false,\n          children: \"Unfinished tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: currentStatus.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: !item.status ? 'task__item task__close' : 'task__item task__open',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task__name\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task__btns btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn__status\",\n              onClick: () => statusTask(item.id),\n              type: \"\",\n              children: item.status === false ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"btn__statusDone\",\n                icon: faCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 69\n              }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 134\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn__delite\",\n              onClick: () => deliteTask(item.id),\n              type: \"\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 110\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters('all'),\n        children: \"All task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters(false),\n        children: \"\\u0421ompleted tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters(true),\n        children: \"Unfinished tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddList, \"v8XejFuUFR+r/9i74Bkw8A89DTs=\");\n\n_c = AddList;\nexport default AddList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/todoList/src/components/AddList/AddList.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faTrash","faCheck","AddList","getTodo","setTodo","currentStatus","setCurrentStatus","localStorage","setItem","JSON","stringify","deliteTask","id","newTodo","filter","item","statusTask","status","TodoFilters","findOption","e","console","log","target","value","map","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../../style/todoList.sass'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction AddList ({ getTodo, setTodo }) {\n\n\n    const [currentStatus, setCurrentStatus] = useState(getTodo);\n    useEffect(() => {\n        localStorage.setItem('todo', JSON.stringify(getTodo))\n    }, [getTodo])\n\n    useEffect(() => {\n        setCurrentStatus(getTodo)\n    }, [getTodo])\n\n    function deliteTask (id) {\n        let newTodo = [...getTodo].filter(item => item.id !== id)\n        setTodo(newTodo)\n    }\n\n    function statusTask (id) {\n        let newTodo = [...getTodo].filter(item => {\n            if (item.id === id) {\n                item.status = !item.status\n            }\n            return item\n        })\n        setTodo(newTodo)\n    }\n    function TodoFilters (status) {\n\n        if (status === 'all') {\n            setCurrentStatus(getTodo)\n        } else {\n            let newTodo = [...getTodo].filter(item => (item.status === status))\n            setCurrentStatus(newTodo)\n        }\n    }\n\n    function findOption (e) {\n        console.log(e.target.value);\n    }\n\n\n\n    return (\n        <div className=\"taskWrapper content\">\n            <div className=\"taskWrapper__todo\">\n                <select onChange={() => findOption()}>\n                    <option value=\"all\">All task</option>\n                    <option value={true} >Сompleted tasks</option>\n                    <option value={false}>Unfinished tasks</option>\n                </select>\n\n                <div className=\"task\">\n                    {\n                        currentStatus.map((item) => (\n\n                            <div className={!item.status ? 'task__item task__close' : 'task__item task__open'} key={item.id}>\n                                <div>\n                                    <p className=\"task__name\"  >{item.title}</p>\n                                </div>\n                                <div className=\"task__btns btn\">\n                                    <div className=\"btn__status\" onClick={() => statusTask(item.id)} type=\"\">\n                                        {\n                                            item.status === false ? <FontAwesomeIcon className=\"btn__statusDone\" icon={faCheck} /> : <FontAwesomeIcon icon={faCheck} />}\n                                    </div>\n                                    <div className=\"btn__delite\" onClick={() => deliteTask(item.id)} type=\"\"><FontAwesomeIcon icon={faTrash} /></div>\n                                </div>\n                            </div>\n\n                        ))\n                    }\n\n                </div>\n            </div>\n\n            <div className=\"filters\">\n                <div className=\"filters__btn\" onClick={() => TodoFilters('all')}>All task</div>\n                <div className=\"filters__btn\" onClick={() => TodoFilters(false)}>Сompleted tasks</div>\n                <div className=\"filters__btn\" onClick={() => TodoFilters(true)}>Unfinished tasks</div>\n            </div >\n        </div>\n\n    )\n}\n\n\nexport default AddList"]},"metadata":{},"sourceType":"module"}