{"ast":null,"code":"var _jsxFileName = \"/home/rascal/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/git/text-front2/src/components/AddList/AddList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../../style/todoList/todoList.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddList(_ref) {\n  _s();\n\n  let {\n    getInput,\n    setinput\n  } = _ref;\n  const [status, setStatus] = useState(null);\n  const [edit, setEdit] = useState(null);\n  let statuses = null;\n\n  function deliteTask(id) {\n    let newTodo = [...getInput].filter(item => item.id !== id);\n    setinput(newTodo);\n  }\n\n  function statusTask(id) {\n    let newTodo = [...getInput].filter(item => {\n      if (item.id === id) {\n        item.status = !item.status;\n        statuses = item.status;\n        console.log(status);\n      }\n\n      return item;\n    });\n    console.log(status);\n    setEdit(id);\n    setStatus(statuses);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: getInput.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task__item\",\n      children: [edit == item.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: !item.status ? 'task__close' : 'task__open',\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: !item.status ? 'task__close' : 'task__open',\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => deliteTask(item.id),\n          type: \"\",\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => statusTask(item.id),\n          type: \"\",\n          children: edit == item.id & item.status == false ? 'выполнено' : 'еще не выполнено'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddList, \"+RNx23N7ttE7VH49Ybc46S6exYI=\");\n\n_c = AddList;\nexport default AddList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/text-front2/src/components/AddList/AddList.js"],"names":["React","useState","AddList","getInput","setinput","status","setStatus","edit","setEdit","statuses","deliteTask","id","newTodo","filter","item","statusTask","console","log","map","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oCAAP;;;AAEA,SAASC,OAAT,OAA0C;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAwB;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,MAAIQ,QAAQ,GAAG,IAAf;;AAEA,WAASC,UAAT,CAAqBC,EAArB,EAAyB;AACrB,QAAIC,OAAO,GAAG,CAAC,GAAGT,QAAJ,EAAcU,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAAzC,CAAd;AACAP,IAAAA,QAAQ,CAACQ,OAAD,CAAR;AACH;;AAED,WAASG,UAAT,CAAqBJ,EAArB,EAAyB;AACrB,QAAIC,OAAO,GAAG,CAAC,GAAGT,QAAJ,EAAcU,MAAd,CAAqBC,IAAI,IAAI;AACvC,UAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAChBG,QAAAA,IAAI,CAACT,MAAL,GAAc,CAACS,IAAI,CAACT,MAApB;AACAI,QAAAA,QAAQ,GAAGK,IAAI,CAACT,MAAhB;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACH;;AACD,aAAOS,IAAP;AACH,KAPa,CAAd;AAQAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACAG,IAAAA,OAAO,CAACG,EAAD,CAAP;AACAL,IAAAA,SAAS,CAACG,QAAD,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAEQN,QAAQ,CAACe,GAAT,CAAcJ,IAAD,iBACT;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBAEQP,IAAI,IAAIO,IAAI,CAACH,EAAb,gBACI;AAAA,+BACI;AAAG,UAAA,SAAS,EAAE,CAACG,IAAI,CAACT,MAAN,GAAe,aAAf,GAA+B,YAA7C;AAAA,oBAA6DS,IAAI,CAACK;AAAlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,gBAII;AAAA,+BACI;AAAG,UAAA,SAAS,EAAE,CAACL,IAAI,CAACT,MAAN,GAAe,aAAf,GAA+B,YAA7C;AAAA,oBAA6DS,IAAI,CAACK;AAAlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANZ,eAUI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,OAAO,EAAE,MAAMT,UAAU,CAACI,IAAI,CAACH,EAAN,CAA9B;AAAyC,UAAA,IAAI,EAAC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,OAAO,EAAE,MAAMI,UAAU,CAACD,IAAI,CAACH,EAAN,CAA9B;AAAyC,UAAA,IAAI,EAAC,EAA9C;AAAA,oBAEQJ,IAAI,IAAIO,IAAI,CAACH,EAAb,GAAkBG,IAAI,CAACT,MAAL,IAAe,KAAjC,GAAyC,WAAzC,GAAuD;AAF/D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA,OAAiCS,IAAI,CAACH,EAAtC;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAnDQT,O;;KAAAA,O;AAsDT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport '../../style/todoList/todoList.sass'\n\nfunction AddList ({ getInput, setinput }) {\n    const [status, setStatus] = useState(null)\n    const [edit, setEdit] = useState(null)\n    let statuses = null\n\n    function deliteTask (id) {\n        let newTodo = [...getInput].filter(item => item.id !== id)\n        setinput(newTodo)\n    }\n\n    function statusTask (id) {\n        let newTodo = [...getInput].filter(item => {\n            if (item.id === id) {\n                item.status = !item.status\n                statuses = item.status\n                console.log(status);\n            }\n            return item\n        })\n        console.log(status);\n        setEdit(id)\n        setStatus(statuses)\n    }\n\n    return (\n        <div className=\"task\">\n            {\n                getInput.map((item) => (\n                    <div className=\"task__item\" key={item.id}>\n                        {\n                            edit == item.id ?\n                                <div>\n                                    <p className={!item.status ? 'task__close' : 'task__open'} >{item.title}</p>\n                                </div> :\n                                <div>\n                                    <p className={!item.status ? 'task__close' : 'task__open'} >{item.title}</p>\n                                </div>\n                        }\n                        <div className=\"task__btns\">\n                            <div onClick={() => deliteTask(item.id)} type=\"\">удалить</div>\n                            <div onClick={() => statusTask(item.id)} type=\"\">\n                                {\n                                    edit == item.id & item.status == false ? 'выполнено' : 'еще не выполнено'}\n                            </div>\n\n                        </div>\n                    </div>\n                ))\n            }\n        </ div >\n    )\n}\n\n\nexport default AddList"]},"metadata":{},"sourceType":"module"}