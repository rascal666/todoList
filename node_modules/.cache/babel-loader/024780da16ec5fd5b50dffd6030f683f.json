{"ast":null,"code":"var _jsxFileName = \"/home/rascal/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/git/text-front2/src/components/AddList/AddList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport '../../style/todoList/todoList.sass';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddList(_ref) {\n  _s();\n\n  let {\n    getInput,\n    setinput\n  } = _ref;\n  const [currentStatus, setCurrentStatus] = useState(getInput);\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(getInput));\n  }, [getInput]);\n  useEffect(() => {\n    setCurrentStatus(getInput);\n  }, [getInput]);\n\n  function deliteTask(id) {\n    let newTodo = [...getInput].filter(item => item.id !== id);\n    setinput(newTodo);\n  }\n\n  function statusTask(id) {\n    let newTodo = [...getInput].filter(item => {\n      if (item.id === id) {\n        item.status = !item.status;\n      }\n\n      return item;\n    });\n    setinput(newTodo);\n  }\n\n  function TodoFilters(status) {\n    console.log(status);\n\n    if (status === 'all') {\n      setCurrentStatus(getInput);\n      console.log(getInput);\n    } else {\n      console.log(getInput);\n      let newTodo = [...getInput].filter(item => item.status === status);\n      setCurrentStatus(newTodo);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: currentStatus.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !item.status ? 'task__item task__close' : 'task__item task__open',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"task__name\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task__btns btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn__status\",\n            onClick: () => statusTask(item.id),\n            type: \"\",\n            children: item.status == false ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"btn__statusDone\",\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 64\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 129\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn__delite\",\n            onClick: () => deliteTask(item.id),\n            type: \"\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 106\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters('all'),\n        children: \"All task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters(false),\n        children: \"\\u0421ompleted tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters(true),\n        children: \"Unfinished tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddList, \"jvyxPLb+pkoNi0sMD80vGvwzA+o=\");\n\n_c = AddList;\nexport default AddList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/text-front2/src/components/AddList/AddList.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faTrash","faCheck","AddList","getInput","setinput","currentStatus","setCurrentStatus","localStorage","setItem","JSON","stringify","deliteTask","id","newTodo","filter","item","statusTask","status","TodoFilters","console","log","map","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../../style/todoList/todoList.sass'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction AddList ({ getInput, setinput }) {\n\n\n    const [currentStatus, setCurrentStatus] = useState(getInput);\n\n    useEffect(() => {\n        localStorage.setItem('todo', JSON.stringify(getInput))\n    }, [getInput])\n\n    useEffect(() => {\n        setCurrentStatus(getInput)\n    }, [getInput])\n\n    function deliteTask (id) {\n        let newTodo = [...getInput].filter(item => item.id !== id)\n        setinput(newTodo)\n    }\n\n    function statusTask (id) {\n        let newTodo = [...getInput].filter(item => {\n            if (item.id === id) {\n                item.status = !item.status\n            }\n            return item\n        })\n        setinput(newTodo)\n    }\n    function TodoFilters (status) {\n        console.log(status);\n        if (status === 'all') {\n            setCurrentStatus(getInput)\n            console.log(getInput);\n        } else {\n            console.log(getInput);\n            let newTodo = [...getInput].filter(item => (item.status === status))\n            setCurrentStatus(newTodo)\n        }\n    }\n\n\n\n    return (\n        <div className=\"taskWrapper\">\n            <div className=\"task\">\n                {\n                    currentStatus.map((item) => (\n\n                        <div className={!item.status ? 'task__item task__close' : 'task__item task__open'} key={item.id}>\n                            <div>\n                                <p className=\"task__name\"  >{item.title}</p>\n                            </div>\n                            <div className=\"task__btns btn\">\n                                <div className=\"btn__status\" onClick={() => statusTask(item.id)} type=\"\">\n                                    {\n                                        item.status == false ? <FontAwesomeIcon className=\"btn__statusDone\" icon={faCheck} /> : <FontAwesomeIcon icon={faCheck} />}\n                                </div>\n                                <div className=\"btn__delite\" onClick={() => deliteTask(item.id)} type=\"\"><FontAwesomeIcon icon={faTrash} /></div>\n                            </div>\n                        </div>\n\n                    ))\n                }\n\n            </ div >\n            <div className=\"filters\">\n                <div className=\"filters__btn\" onClick={() => TodoFilters('all')}>All task</div>\n                <div className=\"filters__btn\" onClick={() => TodoFilters(false)}>Сompleted tasks</div>\n                <div className=\"filters__btn\" onClick={() => TodoFilters(true)}>Unfinished tasks</div>\n            </div >\n        </div>\n\n    )\n}\n\n\nexport default AddList"]},"metadata":{},"sourceType":"module"}