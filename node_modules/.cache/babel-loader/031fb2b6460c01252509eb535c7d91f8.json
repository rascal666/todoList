{"ast":null,"code":"var _jsxFileName = \"/home/rascal/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/git/todoList/src/components/AddList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport '../style/todoList.sass';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { observer } from \"mobx-react-lite\";\nimport todo from \"../store/todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddList = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    todos,\n    setTodo\n  } = _ref;\n  const [currentStatus, setCurrentStatus] = useState(todos);\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(todos));\n  }, [todos]);\n  useEffect(() => {\n    setCurrentStatus(todos);\n  }, [todos]);\n\n  function deliteTask(id) {\n    const newTodo = [...todos].filter(item => item.id !== id);\n    setTodo(newTodo);\n  }\n\n  function TodoFilters(status) {\n    if (status == 'true') {\n      status = true;\n    }\n\n    if (status == 'false') {\n      status = false;\n    }\n\n    if (status === 'all') {\n      setCurrentStatus(todos);\n    } else {\n      const newTodo = [...todos].filter(item => item.status === status);\n      setCurrentStatus(newTodo);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskWrapper content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskWrapper__todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"optionsFilters\",\n        onChange: e => {\n          const optin = e.target.value;\n          TodoFilters(optin);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"\\u0421ompleted tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"Unfinished tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: todo.todos.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: !item.status ? 'task__item task__close' : 'task__item task__open',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task__name\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task__btns btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn__status\",\n              onClick: () => todo.statusTask(item.id),\n              type: \"\",\n              children: item.status === false ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"btn__statusDone\",\n                icon: faCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 69\n              }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 134\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn__delite\",\n              onClick: () => deliteTask(item.id),\n              type: \"\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 110\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters('all'),\n        children: \"All task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters(false),\n        children: \"\\u0421ompleted tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters__btn\",\n        onClick: () => TodoFilters(true),\n        children: \"Unfinished tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"T4HpAui6DuIi533D2MsVK5TaSMA=\")), \"T4HpAui6DuIi533D2MsVK5TaSMA=\");\n\n_c2 = AddList;\nexport default AddList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddList$observer\");\n$RefreshReg$(_c2, \"AddList\");","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/todoList/src/components/AddList.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faTrash","faCheck","observer","todo","AddList","todos","setTodo","currentStatus","setCurrentStatus","localStorage","setItem","JSON","stringify","deliteTask","id","newTodo","filter","item","TodoFilters","status","e","optin","target","value","map","title","statusTask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../style/todoList.sass'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { observer } from \"mobx-react-lite\";\nimport todo from \"../store/todo\";\n\n\nconst AddList = observer(({ todos, setTodo }) => {\n\n    const [currentStatus, setCurrentStatus] = useState(todos);\n\n    useEffect(() => {\n        localStorage.setItem('todo', JSON.stringify(todos))\n    }, [todos])\n\n    useEffect(() => {\n        setCurrentStatus(todos)\n    }, [todos])\n\n    function deliteTask (id) {\n        const newTodo = [...todos].filter(item => item.id !== id)\n        setTodo(newTodo)\n    }\n\n\n\n    function TodoFilters (status) {\n        if (status == 'true') {\n            status = true\n        }\n        if (status == 'false') {\n            status = false\n        }\n        if (status === 'all') {\n            setCurrentStatus(todos)\n        } else {\n            const newTodo = [...todos].filter(item => (item.status === status))\n            setCurrentStatus(newTodo)\n        }\n    }\n\n    return (\n        <div className=\"taskWrapper content\">\n            <div className=\"taskWrapper__todo\">\n                <select className=\"optionsFilters\" onChange={(e) => {\n                    const optin = e.target.value\n                    TodoFilters(optin)\n                }}>\n                    <option value='all'>All task</option>\n                    <option value='false' >Сompleted tasks</option>\n                    <option value='true'>Unfinished tasks</option>\n                </select>\n\n                <div className=\"task\">\n                    {\n                        todo.todos.map((item) => (\n\n                            <div className={!item.status ? 'task__item task__close' : 'task__item task__open'} key={item.id}>\n                                <div>\n                                    <p className=\"task__name\"  >{item.title}</p>\n                                </div>\n                                <div className=\"task__btns btn\">\n                                    <div className=\"btn__status\" onClick={() => todo.statusTask(item.id)} type=\"\">\n                                        {\n                                            item.status === false ? <FontAwesomeIcon className=\"btn__statusDone\" icon={faCheck} /> : <FontAwesomeIcon icon={faCheck} />}\n                                    </div>\n                                    <div className=\"btn__delite\" onClick={() => deliteTask(item.id)} type=\"\"><FontAwesomeIcon icon={faTrash} /></div>\n                                </div>\n                            </div>\n\n                        ))\n                    }\n\n                </div>\n            </div>\n\n            <div className=\"filters\">\n                <div className=\"filters__btn\" onClick={() => TodoFilters('all')}>All task</div>\n                <div className=\"filters__btn\" onClick={() => TodoFilters(false)}>Сompleted tasks</div>\n                <div className=\"filters__btn\" onClick={() => TodoFilters(true)}>Unfinished tasks</div>\n            </div >\n        </div>\n    )\n})\n\n\nexport default AddList"]},"metadata":{},"sourceType":"module"}