{"ast":null,"code":"// import React, { useRef } from \"react\";\nimport { makeAutoObservable } from 'mobx';\nimport { observer } from 'mobx-react-lite';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Todo {\n  // textInput = useRef()\n  constructor() {\n    this.todos = [];\n    this.inputValue = '';\n    makeAutoObservable(this);\n  }\n\n  addTask() {\n    if (this.inputValue != '') {\n      this.todos.push({\n        title: this.inputValue,\n        id: uuidv4(),\n        status: true\n      });\n    }\n  }\n\n  keyDown(ev) {\n    if (ev.keyCode === 13) {\n      this.addTask();\n    }\n  }\n\n  handleChange(e) {\n    this.inputValue = e;\n  }\n\n  statusTask(id) {\n    this.todos.filter(item => {\n      if (item.id === id) {\n        item.status = !item.status;\n      }\n\n      return item;\n    });\n  }\n\n  deliteTask(id) {\n    console.log(`до`, this.todos);\n    this.todos.filter(item => item.id !== id);\n    console.log(`после`, this.todos);\n  }\n\n}\n\nexport default new Todo();","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/todoList/src/store/todo.js"],"names":["makeAutoObservable","observer","v4","uuidv4","Todo","constructor","todos","inputValue","addTask","push","title","id","status","keyDown","ev","keyCode","handleChange","e","statusTask","filter","item","deliteTask","console","log"],"mappings":"AAAA;AACA,SAASA,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,IAAN,CAAW;AAGP;AAEAC,EAAAA,WAAW,GAAG;AAAA,SAJdC,KAIc,GAJN,EAIM;AAAA,SAHdC,UAGc,GAHD,EAGC;AACVP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAGDQ,EAAAA,OAAO,GAAI;AACP,QAAI,KAAKD,UAAL,IAAmB,EAAvB,EAA2B;AACvB,WAAKD,KAAL,CAAWG,IAAX,CAAgB;AACZC,QAAAA,KAAK,EAAE,KAAKH,UADA;AAEZI,QAAAA,EAAE,EAAER,MAAM,EAFE;AAGZS,QAAAA,MAAM,EAAE;AAHI,OAAhB;AAKH;AACJ;;AACDC,EAAAA,OAAO,CAAEC,EAAF,EAAM;AACT,QAAIA,EAAE,CAACC,OAAH,KAAe,EAAnB,EAAuB;AACnB,WAAKP,OAAL;AACH;AACJ;;AAEDQ,EAAAA,YAAY,CAAEC,CAAF,EAAK;AACb,SAAKV,UAAL,GAAkBU,CAAlB;AACH;;AAGDC,EAAAA,UAAU,CAAEP,EAAF,EAAM;AACZ,SAAKL,KAAL,CAAWa,MAAX,CAAkBC,IAAI,IAAI;AACtB,UAAIA,IAAI,CAACT,EAAL,KAAYA,EAAhB,EAAoB;AAChBS,QAAAA,IAAI,CAACR,MAAL,GAAc,CAACQ,IAAI,CAACR,MAApB;AACH;;AACD,aAAOQ,IAAP;AACH,KALD;AAMH;;AAEDC,EAAAA,UAAU,CAAEV,EAAF,EAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAa,IAAb,EAAkB,KAAKjB,KAAvB;AACA,SAAKA,KAAL,CAAWa,MAAX,CAAkBC,IAAI,IAElBA,IAAI,CAACT,EAAL,KAAYA,EAFhB;AAIAW,IAAAA,OAAO,CAACC,GAAR,CAAa,OAAb,EAAqB,KAAKjB,KAA1B;AACH;;AA9CM;;AAiDX,eAAe,IAAIF,IAAJ,EAAf","sourcesContent":["// import React, { useRef } from \"react\";\nimport { makeAutoObservable } from 'mobx'\nimport { observer } from 'mobx-react-lite';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Todo {\n    todos = []\n    inputValue = ''\n    // textInput = useRef()\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n\n    addTask () {\n        if (this.inputValue != '') {\n            this.todos.push({\n                title: this.inputValue,\n                id: uuidv4(),\n                status: true\n            })\n        }\n    }\n    keyDown (ev) {\n        if (ev.keyCode === 13) {\n            this.addTask()\n        }\n    }\n\n    handleChange (e) {\n        this.inputValue = e\n    };\n\n\n    statusTask (id) {\n        this.todos.filter(item => {\n            if (item.id === id) {\n                item.status = !item.status\n            }\n            return item\n        })\n    }\n\n    deliteTask (id) {\n        console.log(`до`, this.todos);\n        this.todos.filter(item => (\n\n            item.id !== id\n        ))\n        console.log(`после`, this.todos);\n    }\n}\n\nexport default new Todo();"]},"metadata":{},"sourceType":"module"}