{"ast":null,"code":"// import React, { useRef } from \"react\";\nimport { makeAutoObservable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Todo {\n  // textInput = useRef()\n  constructor() {\n    this.todoss = [];\n    this.inputValue = '';\n    makeAutoObservable(this);\n  }\n\n  addTask() {\n    console.log('fvfv');\n\n    if (this.inputValue != '') {\n      this.todos.push({\n        title: this.inputValue,\n        id: uuidv4(),\n        status: true\n      });\n    }\n\n    console.log(this.todos);\n  }\n\n  handleChange(e) {\n    this.inputValue = e;\n  }\n\n}\n\nexport default new Todo();","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/todoList/src/store/todo.js"],"names":["makeAutoObservable","v4","uuidv4","Todo","constructor","todoss","inputValue","addTask","console","log","todos","push","title","id","status","handleChange","e"],"mappings":"AAAA;AACA,SAASA,kBAAT,QAAmC,MAAnC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,IAAN,CAAW;AAGP;AAEAC,EAAAA,WAAW,GAAG;AAAA,SAJdC,MAIc,GAJL,EAIK;AAAA,SAHdC,UAGc,GAHD,EAGC;AACVN,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAEDO,EAAAA,OAAO,GAAI;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAI,KAAKH,UAAL,IAAmB,EAAvB,EAA2B;AACvB,WAAKI,KAAL,CAAWC,IAAX,CAAgB;AACZC,QAAAA,KAAK,EAAE,KAAKN,UADA;AAEZO,QAAAA,EAAE,EAAEX,MAAM,EAFE;AAGZY,QAAAA,MAAM,EAAE;AAHI,OAAhB;AAKH;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH;;AAEDK,EAAAA,YAAY,CAAEC,CAAF,EAAK;AACb,SAAKV,UAAL,GAAkBU,CAAlB;AACH;;AAvBM;;AA0BX,eAAe,IAAIb,IAAJ,EAAf","sourcesContent":["// import React, { useRef } from \"react\";\nimport { makeAutoObservable } from 'mobx'\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Todo {\n    todoss = []\n    inputValue = ''\n    // textInput = useRef()\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    addTask () {\n        console.log('fvfv');\n        if (this.inputValue != '') {\n            this.todos.push({\n                title: this.inputValue,\n                id: uuidv4(),\n                status: true\n            })\n        }\n        console.log(this.todos);\n    }\n\n    handleChange (e) {\n        this.inputValue = e\n    };\n}\n\nexport default new Todo();"]},"metadata":{},"sourceType":"module"}