{"ast":null,"code":"import { makeAutoObservable, makeObservable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Todo {\n  // textInput = useRef()\n  constructor() {\n    this.todos = [];\n    this.todosFilter = [];\n    this.inputValue = '';\n    makeAutoObservable(this, {\n      todosFilter: makeObservable\n    });\n  }\n\n  TodoFilters(status) {\n    if (status == 'true') {\n      status = true;\n    }\n\n    if (status == 'false') {\n      status = false;\n    }\n\n    if (status === 'all') {\n      this.todosFilter = this.todos;\n    } else {\n      this.todosFilter = this.todos.filter(item => item.status === status);\n    }\n  } // !сделать обнуление инпута\n\n\n  addTask() {\n    if (this.inputValue != '') {\n      this.todos.push({\n        title: this.inputValue,\n        id: uuidv4(),\n        status: true\n      });\n      this.inputValue = '';\n    }\n  }\n\n  keyDown(ev) {\n    if (ev.keyCode === 13) {\n      this.addTask();\n    }\n  }\n\n  handleChange(e) {\n    this.inputValue = e;\n  }\n\n  statusTask(id) {\n    this.todos.filter(item => {\n      if (item.id === id) {\n        item.status = !item.status;\n      }\n\n      return item;\n    });\n  }\n\n  deliteTask(id) {\n    this.todos = this.todos.filter(item => item.id !== id);\n  }\n\n}\n\nexport default new Todo();","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/todoList/src/store/todo.js"],"names":["makeAutoObservable","makeObservable","v4","uuidv4","Todo","constructor","todos","todosFilter","inputValue","TodoFilters","status","filter","item","addTask","push","title","id","keyDown","ev","keyCode","handleChange","e","statusTask","deliteTask"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,cAA7B,QAAmD,MAAnD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,IAAN,CAAW;AAIP;AAEAC,EAAAA,WAAW,GAAG;AAAA,SALdC,KAKc,GALN,EAKM;AAAA,SAJdC,WAIc,GAJA,EAIA;AAAA,SAHdC,UAGc,GAHD,EAGC;AACVR,IAAAA,kBAAkB,CAAC,IAAD,EAAO;AAAEO,MAAAA,WAAW,EAAEN;AAAf,KAAP,CAAlB;AACH;;AACDQ,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACjB,QAAIA,MAAM,IAAI,MAAd,EAAsB;AAClBA,MAAAA,MAAM,GAAG,IAAT;AACH;;AACD,QAAIA,MAAM,IAAI,OAAd,EAAuB;AACnBA,MAAAA,MAAM,GAAG,KAAT;AACH;;AACD,QAAIA,MAAM,KAAK,KAAf,EAAsB;AAClB,WAAKH,WAAL,GAAmB,KAAKD,KAAxB;AACH,KAFD,MAEO;AACH,WAAKC,WAAL,GAAmB,KAAKD,KAAL,CAAWK,MAAX,CAAkBC,IAAI,IAAKA,IAAI,CAACF,MAAL,KAAgBA,MAA3C,CAAnB;AACH;AACJ,GArBM,CAuBP;;;AACAG,EAAAA,OAAO,GAAI;AACP,QAAI,KAAKL,UAAL,IAAmB,EAAvB,EAA2B;AACvB,WAAKF,KAAL,CAAWQ,IAAX,CAAgB;AACZC,QAAAA,KAAK,EAAE,KAAKP,UADA;AAEZQ,QAAAA,EAAE,EAAEb,MAAM,EAFE;AAGZO,QAAAA,MAAM,EAAE;AAHI,OAAhB;AAKA,WAAKF,UAAL,GAAkB,EAAlB;AAEH;AAEJ;;AACDS,EAAAA,OAAO,CAAEC,EAAF,EAAM;AACT,QAAIA,EAAE,CAACC,OAAH,KAAe,EAAnB,EAAuB;AACnB,WAAKN,OAAL;AACH;AACJ;;AAEDO,EAAAA,YAAY,CAAEC,CAAF,EAAK;AACb,SAAKb,UAAL,GAAkBa,CAAlB;AACH;;AAIDC,EAAAA,UAAU,CAAEN,EAAF,EAAM;AACZ,SAAKV,KAAL,CAAWK,MAAX,CAAkBC,IAAI,IAAI;AACtB,UAAIA,IAAI,CAACI,EAAL,KAAYA,EAAhB,EAAoB;AAChBJ,QAAAA,IAAI,CAACF,MAAL,GAAc,CAACE,IAAI,CAACF,MAApB;AACH;;AACD,aAAOE,IAAP;AACH,KALD;AAMH;;AAEDW,EAAAA,UAAU,CAAEP,EAAF,EAAM;AACZ,SAAKV,KAAL,GAAa,KAAKA,KAAL,CAAWK,MAAX,CAAkBC,IAAI,IAC/BA,IAAI,CAACI,EAAL,KAAYA,EADH,CAAb;AAGH;;AA7DM;;AAgEX,eAAe,IAAIZ,IAAJ,EAAf","sourcesContent":["import { makeAutoObservable, makeObservable } from 'mobx'\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Todo {\n    todos = []\n    todosFilter = []\n    inputValue = ''\n    // textInput = useRef()\n\n    constructor() {\n        makeAutoObservable(this, { todosFilter: makeObservable })\n    }\n    TodoFilters (status) {\n        if (status == 'true') {\n            status = true\n        }\n        if (status == 'false') {\n            status = false\n        }\n        if (status === 'all') {\n            this.todosFilter = this.todos\n        } else {\n            this.todosFilter = this.todos.filter(item => (item.status === status))\n        }\n    }\n\n    // !сделать обнуление инпута\n    addTask () {\n        if (this.inputValue != '') {\n            this.todos.push({\n                title: this.inputValue,\n                id: uuidv4(),\n                status: true\n            })\n            this.inputValue = ''\n\n        }\n\n    }\n    keyDown (ev) {\n        if (ev.keyCode === 13) {\n            this.addTask()\n        }\n    }\n\n    handleChange (e) {\n        this.inputValue = e\n    };\n\n\n\n    statusTask (id) {\n        this.todos.filter(item => {\n            if (item.id === id) {\n                item.status = !item.status\n            }\n            return item\n        })\n    }\n\n    deliteTask (id) {\n        this.todos = this.todos.filter(item => (\n            item.id !== id\n        ))\n    }\n}\n\nexport default new Todo();"]},"metadata":{},"sourceType":"module"}