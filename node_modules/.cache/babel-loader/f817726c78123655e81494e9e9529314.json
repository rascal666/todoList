{"ast":null,"code":"import _classCallCheck from\"/home/rascal/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/git/todoList/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/rascal/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/git/todoList/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{makeAutoObservable}from'mobx';import{observer}from\"mobx-react-lite\";import{v4 as uuidv4}from'uuid';var Todo=/*#__PURE__*/function(){// getlocalStorageTodo = () => {\n//     const todo = localStorage.getItem('todo')\n//     if (todo) {\n//         return JSON.parse(todo)\n//     } else {\n//         return []\n//     }\n// }\nfunction Todo(){_classCallCheck(this,Todo);this.todos=[];this.todosFilter=[];this.inputValue='';makeAutoObservable(this);}_createClass(Todo,[{key:\"TodoFilters\",value:function TodoFilters(status){if(status=='true'){status=true;}if(status=='false'){status=false;}if(status==='all'){this.todosFilter=this.todos;}else{this.todosFilter=this.todos.filter(function(item){return item.status===status;});}}},{key:\"addTask\",value:function addTask(){if(this.inputValue!=''){this.todos.push({title:this.inputValue,id:uuidv4(),status:true});this.todosFilter=this.todos;this.inputValue='';}}},{key:\"keyDown\",value:function keyDown(ev){if(ev.keyCode===13){this.addTask();}}},{key:\"handleChange\",value:function handleChange(e){this.inputValue=e;}},{key:\"statusTask\",value:function statusTask(id){this.todos.filter(function(item){if(item.id===id){item.status=!item.status;}return item;});}},{key:\"deliteTask\",value:function deliteTask(id){this.todos=this.todos.filter(function(item){return item.id!==id;});this.todosFilter=this.todos;}}]);return Todo;}();export default new Todo();","map":{"version":3,"sources":["/home/rascal/Рабочий стол/git/todoList/src/store/todo.js"],"names":["makeAutoObservable","observer","v4","uuidv4","Todo","todos","todosFilter","inputValue","status","filter","item","push","title","id","ev","keyCode","addTask","e"],"mappings":"oWAAA,OAASA,kBAAT,KAAmC,MAAnC,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,C,GAEMC,CAAAA,I,yBAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAc,iCAbdC,KAac,CAbN,EAaM,MAZdC,WAYc,CAZA,EAYA,MAXdC,UAWc,CAXD,EAWC,CACVP,kBAAkB,CAAC,IAAD,CAAlB,CACH,C,4CACD,qBAAaQ,MAAb,CAAqB,CACjB,GAAIA,MAAM,EAAI,MAAd,CAAsB,CAClBA,MAAM,CAAG,IAAT,CACH,CACD,GAAIA,MAAM,EAAI,OAAd,CAAuB,CACnBA,MAAM,CAAG,KAAT,CACH,CACD,GAAIA,MAAM,GAAK,KAAf,CAAsB,CAClB,KAAKF,WAAL,CAAmB,KAAKD,KAAxB,CACH,CAFD,IAEO,CACH,KAAKC,WAAL,CAAmB,KAAKD,KAAL,CAAWI,MAAX,CAAkB,SAAAC,IAAI,QAAKA,CAAAA,IAAI,CAACF,MAAL,GAAgBA,MAArB,EAAtB,CAAnB,CACH,CACJ,C,uBAED,kBAAW,CACP,GAAI,KAAKD,UAAL,EAAmB,EAAvB,CAA2B,CACvB,KAAKF,KAAL,CAAWM,IAAX,CAAgB,CACZC,KAAK,CAAE,KAAKL,UADA,CAEZM,EAAE,CAAEV,MAAM,EAFE,CAGZK,MAAM,CAAE,IAHI,CAAhB,EAKA,KAAKF,WAAL,CAAmB,KAAKD,KAAxB,CACA,KAAKE,UAAL,CAAkB,EAAlB,CACH,CAEJ,C,uBACD,iBAASO,EAAT,CAAa,CACT,GAAIA,EAAE,CAACC,OAAH,GAAe,EAAnB,CAAuB,CACnB,KAAKC,OAAL,GACH,CACJ,C,4BAED,sBAAcC,CAAd,CAAiB,CACb,KAAKV,UAAL,CAAkBU,CAAlB,CACH,C,0BAID,oBAAYJ,EAAZ,CAAgB,CACZ,KAAKR,KAAL,CAAWI,MAAX,CAAkB,SAAAC,IAAI,CAAI,CACtB,GAAIA,IAAI,CAACG,EAAL,GAAYA,EAAhB,CAAoB,CAChBH,IAAI,CAACF,MAAL,CAAc,CAACE,IAAI,CAACF,MAApB,CACH,CACD,MAAOE,CAAAA,IAAP,CACH,CALD,EAMH,C,0BAED,oBAAYG,EAAZ,CAAgB,CACZ,KAAKR,KAAL,CAAa,KAAKA,KAAL,CAAWI,MAAX,CAAkB,SAAAC,IAAI,QAC/BA,CAAAA,IAAI,CAACG,EAAL,GAAYA,EADmB,EAAtB,CAAb,CAGA,KAAKP,WAAL,CAAmB,KAAKD,KAAxB,CACH,C,oBAGL,cAAe,IAAID,CAAAA,IAAJ,EAAf","sourcesContent":["import { makeAutoObservable } from 'mobx'\nimport { observer } from \"mobx-react-lite\";\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Todo {\n    todos = []\n    todosFilter = []\n    inputValue = ''\n\n    // getlocalStorageTodo = () => {\n    //     const todo = localStorage.getItem('todo')\n    //     if (todo) {\n    //         return JSON.parse(todo)\n    //     } else {\n    //         return []\n    //     }\n    // }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n    TodoFilters (status) {\n        if (status == 'true') {\n            status = true\n        }\n        if (status == 'false') {\n            status = false\n        }\n        if (status === 'all') {\n            this.todosFilter = this.todos\n        } else {\n            this.todosFilter = this.todos.filter(item => (item.status === status))\n        }\n    }\n\n    addTask () {\n        if (this.inputValue != '') {\n            this.todos.push({\n                title: this.inputValue,\n                id: uuidv4(),\n                status: true\n            })\n            this.todosFilter = this.todos\n            this.inputValue = ''\n        }\n\n    }\n    keyDown (ev) {\n        if (ev.keyCode === 13) {\n            this.addTask()\n        }\n    }\n\n    handleChange (e) {\n        this.inputValue = e\n    };\n\n\n\n    statusTask (id) {\n        this.todos.filter(item => {\n            if (item.id === id) {\n                item.status = !item.status\n            }\n            return item\n        })\n    }\n\n    deliteTask (id) {\n        this.todos = this.todos.filter(item => (\n            item.id !== id\n        ))\n        this.todosFilter = this.todos\n    }\n}\n\nexport default new Todo();"]},"metadata":{},"sourceType":"module"}